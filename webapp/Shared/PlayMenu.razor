@using webapp.Data
@inject PodcastService podcastService

<div class="col-md-2 pt-dark-grey-bg">
    <div class="container">
        <p class="pt-text-small pt-moraine-light">Currently playing</p>
        <p class="pt-text-small pt-moraine-dark">@currentlyPlaying.Name</p>
        <p class="pt-text-mini pt-moraine-dark">by @currentlyPlaying.Author</p>
        <p class="pt-text-mini pt-moraine-dark text-center">00:15:37 / @currentlyPlaying.Length</p>
        <hr />
        <p class="pt-text-small pt-moraine-light">Up next</p>
        @foreach (var item in upNext)
        {
            <p class="pt-text-mini pt-moraine-dark">@item.Name by @item.Author</p>
        }
    </div>
</div>

@code
{
    private Podcast currentlyPlaying = new Podcast();
    private List<Podcast> upNext = new List<Podcast>();

    protected override async Task OnInitializedAsync()
    {
        var queue = (await podcastService.GetQueuedPodcasts()).ToList();
        currentlyPlaying = queue.FirstOrDefault();

        if (queue.Count > 1)
        {
            queue.RemoveAt(0);
            upNext = queue;
        }
    }
}